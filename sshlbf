#!/bin/bash
#
# SSH into same directory inside Local by Flywheel.

# Exit the shell if any subcommand or pipeline returns a non-zero status
set -e

# Looking at our current directory here on our host machine,
# find the equivalent directory within the guest machine.
host_machine_path=$(pwd);

# http://stackoverflow.com/questions/19482123/extract-part-of-a-string-using-bash-cut-split
# Remove first part of host_machine_path (keep only anything after "/app/").
path_after_app=${host_machine_path#*/app/};

# If "/app/" does not appear in host_machine_path, these will be equal.
if [ "${host_machine_path}" = "${path_after_app}" ]
then
	# "/app/" is not found in $host_machine_path, we use a default.
	guest_machine_path="/app";
else
	# "/app/" is found in $host_machine_path, we use what comes after it
	# to populate our path for the guest machine.
	guest_machine_path="/app/${path_after_app}";
fi

# Find the docker container id (stored in .dockerid).

# If $dir is not the top level directory (`/`), perform the loop.
dir=$host_machine_path;
while [[ $dir != / ]];
do
	# Look for a file in the current directory, whose name is ".dockerid"
	# The .dockerid file contains the id for the docker container.
	result=$(find "$dir" -maxdepth 1 -mindepth 1 -name ".dockerid")

	# If a result is found.
	if [[ ! -z "$result" ]]
	then
		# $result is the full path and filename of .dockerid

		# Read the first line of .dockerid and store in $dockerid
		dockerid=$(head -n 1 "$result")

		# Run docker-machine command to prep env (I think)
		# https://docs.docker.com/machine/overview/
		eval $("/Applications/Local by Flywheel.app/Contents/Resources/extraResources/virtual-machine/vendor/docker/osx/docker-machine" env local-by-flywheel);

		# $dockerid now contains the Local By Flywheel container ID.
		# Run /bin/bash inside docker container.
		# Keep STDIN open even if not attached (-i)
		# Allocate a pseudo-TTY (-t)
		# See https://docs.docker.com/engine/reference/commandline/exec/#usage
		# Change the directory to match our current directory.
		# Run /bin/bash to keep the session open.
		"/Applications/Local by Flywheel.app/Contents/Resources/extraResources/virtual-machine/vendor/docker/osx/docker" exec -it $dockerid /bin/bash -c "cd ${guest_machine_path} && /bin/bash";
		exit
	fi
	dir="$(dirname "$dir")"
done
echo "Failed to SSH in. No .dockerid file was found.";
